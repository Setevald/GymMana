# Generated by Django 5.1.3 on 2024-12-10 06:05

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Maintenance',
            fields=[
                ('maintenance_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('maintenance_date', models.DateField()),
                ('maintenance_type', models.CharField(max_length=50)),
                ('technician_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('membership_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('membership_name', models.CharField(max_length=100)),
                ('monthly_fee', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Promotional',
            fields=[
                ('promotional_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('promotional_name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('promotional_start_date', models.DateField()),
                ('promotional_end_date', models.DateField()),
                ('discount_percentage', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Trainer',
            fields=[
                ('trainer_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('trainer_name', models.CharField(max_length=100)),
                ('trainer_specialty', models.CharField(max_length=100)),
                ('years_of_experience', models.IntegerField()),
                ('trainer_fee', models.IntegerField()),
                ('phone_number', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('user_address', models.TextField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'swappable': 'AUTH_USER_MODEL',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('equipment_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('equipment_name', models.CharField(max_length=100)),
                ('type', models.CharField(max_length=50)),
                ('cost', models.IntegerField()),
                ('purchase_date', models.DateField()),
                ('condition', models.CharField(max_length=50)),
                ('maintenance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='gym.maintenance')),
            ],
        ),
        migrations.CreateModel(
            name='Classes',
            fields=[
                ('class_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('class_name', models.CharField(max_length=100)),
                ('class_schedule', models.DateField()),
                ('trainer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gym.trainer')),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('transaction_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('membership_start_date', models.DateField()),
                ('membership_end_date', models.DateField()),
                ('membership', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gym.membership')),
                ('promotional', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gym.promotional')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TransactionDetail',
            fields=[
                ('transaction_detail_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('quantity', models.IntegerField()),
                ('class_info', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gym.classes')),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gym.equipment')),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gym.transaction')),
            ],
        ),
    ]
